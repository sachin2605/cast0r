---
apiVersion: v1
kind: Secret
metadata:
    name: mongodb-secret
type: Opaque
data:
    mongo-root-username: cm9vdA==
    mongo-root-password: ZXhhbXBsZQ==
---
apiVersion: v1
kind: ConfigMap
metadata: 
  name: mongodb-configmap
data:
  database_url: mongodb-service
---
#mongo-express-service for debugging purpose
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: mongo-express
#   labels:
#     app: mongo-express
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: mongo-express
#   template:
#     metadata:
#       labels:
#         app: mongo-express
#     spec:
#       containers:
#       - name: mongo-express
#         image: mongo-express
#         ports:
#         - containerPort: 8081
#         env:
#         - name: ME_CONFIG_MONGODB_ADMINUSERNAME
#           valueFrom:
#             secretKeyRef:
#               name: mongodb-secret
#               key: mongo-root-username
#         - name: ME_CONFIG_MONGODB_ADMINPASSWORD
#           valueFrom: 
#             secretKeyRef:
#               name: mongodb-secret
#               key: mongo-root-password
#         - name: ME_CONFIG_MONGODB_SERVER
#           valueFrom: 
#             configMapKeyRef:
#               name: mongodb-configmap
#               key: database_url
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: mongo-express-service
# spec:
#   selector:
#     app: mongo-express
#   type: LoadBalancer  
#   ports:
#     - protocol: TCP
#       port: 8081
#       targetPort: 8081
#       nodePort: 30000
# ---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb-deployment
  labels:
    app: mongodb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - name: mongodb
        image: mongo
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: mongo-root-username
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom: 
            secretKeyRef:
              name: mongodb-secret
              key: mongo-root-password
--- 
#  Creating Internal service to access the mongo pod

apiVersion: v1
kind: Service
metadata: 
  name: mongodb-service
spec:
  selector:
     app: mongodb
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017

---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: fruits
  name: fruits
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fruits
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: fruits
    spec:
      containers:
        - image: ghcr.io/sachin2605/cast0r:latest
          name: fruits
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          resources: {}
          env:
            - name: MONGOURI
              value: mongodb://root:example@mongodb-service:27017/
          # livenessProbe:
          #   httpGet:
          #     path: /health
          #     port: 8080
          #   initialDelaySeconds: 20
          #   periodSeconds: 5
          # readinessProbe:
          #   httpGet:
          #     path: /health
          #     port: 8080
          #   initialDelaySeconds: 20
          #   periodSeconds: 5
      restartPolicy: Always
status: {}

---
apiVersion: v1
kind: Service
metadata: 
  name: fruits-api
spec:
  selector:
     app: fruits
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
